enum Type {
	ACCOUNT
	ZONE
	RECORD
	DISTRIBUTION
	ORIGIN
	ELASTICBEANSTALK
}

enum Direction {
	UPSTREAM
	DOWNSTREAM
}

type Account {
	accountID: ID!
	zones: [Zone!]!
	zone(id: ID!): Zone!
	records: [Record!]!
	distributions: [Distribution!]!
}

type Zone {
	zoneID: ID! 
	name: String!
	serviceType: String!
	records: [Record!]!
	record(id: ID!): Record!
	getRecordsWithDomain(domain: String!): [Record!]!
	convertToHijackableResourceMap: HijackableResourceMap!

}

type Record {
	recordID: ID!
	recordType: String!
	values: [Value!]!
	alias: Boolean!
	getValuesWithDomain(domain: String!): [Value!]!
	convertToHijackableResourceMap: HijackableResourceMap!
}

type Value {
	valueID: ID!
}

type Distribution {
	distributionID: ID!
	domain: String!
	origins: [Origin!]!
	originGroups: [OriginGroup!]!
	getOriginsWithDomain(domain: String!): [Origin!]!
	getOriginGroupsWithDomain(domain: String!): [OriginGroup!]!
	convertToHijackableResourceMap: HijackableResourceMap!
}

type Origin {
	originID: ID!
	domain: String!
}

type OriginGroup {
	groupID: ID!
	origins: [Value!]!
	getValueWithDomain(domain: String!): [Value!]!
}

type ElasticbeanstalkEnvironment {
	 environmentID: ID!
	 environmentName: String!
	 applicationName: String!
	 environmentURL: String!
	 cname: String!
	 region: String!
	 convertToHijackableResourceMap: HijackableResourceMap!
}

type HijackableResource {
	id: ID!
	account: String!
	type: Type!
	value: Value!
}

type HijackableResourceRoot {
	id: ID!
	rootResourceID: ID!
	direction: Direction!
	maps: [HijackableResourceMap!]!
}

type HijackableResourceMap {
	resource: HijackableResource!
	direction: Direction!
	contains: [HijackableResourceMap!]!
}

type Query {
	accounts: [Account!]!
	getAccountWithAccountID(accountID: ID!): Account!
	getAccountWithDomain(domain: String!): Account!
	
	zones: [Zone!]!
	getZoneWithResourceID(resourceID: ID!): Zone!
	getAllZonesWithDomain(domain: String!): [Zone!]!
	
	records: [Record!]!
	getRecordWithResourceID(resourceID: ID!): Record!
	getAllRecordsWithDomain(domain: String!): [Record!]!

	
	values: [Value!]!
	getAllValueWithValueID(valueID: ID!): Value!

	distributions: [Distribution!]!
	getDistributionWithResourceID(resourceID: ID!): Distribution!
	getAllDistributionsWithDomain(domain: String!): [Distribution!]!

	origins: [Origin!]!
	getOriginWithResourceID(resourceID: ID!): Origin!
	getAllOriginsWithDomain(domain: String!): [Origin!]!

	originGroups: [OriginGroup!]! 
	getOriginGroupWithResourceID(resourceID: ID!): OriginGroup!
	getAllOriginGroupsWithDomain(domain: String!): [OriginGroup!]!

	elasticbeanstalkEnvironments: [ElasticbeanstalkEnvironment!]!
	getElasticbeanstalkWithResourceID(resourceID: ID!): ElasticbeanstalkEnvironment!
	getAllElasticbeanstalksWithDomain(domain: String!): [ElasticbeanstalkEnvironment!]!

	getHijackMapWithResourceIDAndDomainsAndTypeAndDirection(queryLabel: String!, resourceID: ID!, domains: [String!]!, type: Type!, direction: Direction!): HijackableResourceRoot!
	getHijackMapWithResourceIDAndDomainsAndTypeAndDirectionThenFlattened(queryLabel: String!, resourceID: ID!, domains: [String!]!, type: Type!, direction: Direction!): HijackableResourceRoot!
}